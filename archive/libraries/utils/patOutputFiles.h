//-*-c++-*------------------------------------------------------------
//
// File name : patOutputFiles.h
// Author :    Michel Bierlaire
// Date :      Sat Mar 11 10:06:52 2017
//
//--------------------------------------------------------------------

#ifndef patOutputFiles_h
#define patOutputFiles_h

#include <vector>
#include "patIterator.h"
#include "patError.h"
#include "patString.h"

// This class gather all files generated by a run in the same location.

class patOutputFiles {

  friend class patSingletonFactory ;

 public:
  
  virtual ~patOutputFiles() ;
  
  static patOutputFiles* the() ;

  void addCriticalFile(patString fileName, patString description) ;
  void addUsefulFile(patString fileName, patString description) ;
  void addDebugFile(patString fileName, patString description) ;
  patIterator<pair<patString,patString> >* createCriticalIterator() ;
  patIterator<pair<patString,patString> >* createUsefulIterator() ;
  patIterator<pair<patString,patString> >* createDebugIterator() ;
  void clearList() ;
  void display() ;
 protected:
  
  patOutputFiles() ;

  // Files critical to use after the run
  vector<pair<patString,patString> > criticalFiles ;
  // Files useful to use after the run
  vector<pair<patString,patString> > usefulFiles ;
  // Files for programmers
  vector<pair<patString,patString> > debugFiles ;

};

#endif
